name: CI

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  check_duplicate_runs:
    name: Check for duplicate runs
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: always
          cancel_others: true
          skip_after_successful_duplicate: true
          paths_ignore: '["**/README.md", "**/CHANGELOG.md", "**/LICENSE.md"]'
          do_not_skip: '["pull_request"]'

  mix_check:
    name: mix check (Elixir ${{matrix.elixir}}, OTP ${{matrix.otp}})
    needs: check_duplicate_runs
    if: ${{ needs.check_duplicate_runs.outputs.should_skip != 'true' }}

    strategy:
      fail-fast: false
      matrix:
        elixir:
        - "1.7"
        - "1.8"
        - "1.9"
        - "1.10"
        - "1.11.4"
        otp:
        - "20.3.8"
        - "21.0"
        - "22.0.2"
        - "23.2.7"
        exclude:
        - elixir: "1.10"
          otp: "20.3.8"
        - elixir: "1.11.4"
          otp: "20.3.8"
        - elixir: "1.11.4"
          otp: "21.0"

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore deps and _build cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}-git-${{ github.sha }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

    - name: Install package dependencies
      run: mix deps.get

    - name: Remove compiled application files
      run: mix clean

    - name: Compile dependencies
      run: mix compile
      env:
        MIX_ENV: test

    - name: Run check
      run: mix check
